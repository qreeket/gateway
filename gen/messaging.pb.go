// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.15.8
// source: messaging.proto

package qreeket

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageStatus int32

const (
	MessageStatus_MESSAGE_STATUS_UNSPECIFIED MessageStatus = 0
	MessageStatus_MESSAGE_STATUS_DRAFT       MessageStatus = 1
	MessageStatus_MESSAGE_STATUS_SENT        MessageStatus = 2
	MessageStatus_MESSAGE_STATUS_RECEIVED    MessageStatus = 3
	MessageStatus_MESSAGE_STATUS_READ        MessageStatus = 4
	MessageStatus_MESSAGE_STATUS_DELETED     MessageStatus = 5
)

// Enum value maps for MessageStatus.
var (
	MessageStatus_name = map[int32]string{
		0: "MESSAGE_STATUS_UNSPECIFIED",
		1: "MESSAGE_STATUS_DRAFT",
		2: "MESSAGE_STATUS_SENT",
		3: "MESSAGE_STATUS_RECEIVED",
		4: "MESSAGE_STATUS_READ",
		5: "MESSAGE_STATUS_DELETED",
	}
	MessageStatus_value = map[string]int32{
		"MESSAGE_STATUS_UNSPECIFIED": 0,
		"MESSAGE_STATUS_DRAFT":       1,
		"MESSAGE_STATUS_SENT":        2,
		"MESSAGE_STATUS_RECEIVED":    3,
		"MESSAGE_STATUS_READ":        4,
		"MESSAGE_STATUS_DELETED":     5,
	}
)

func (x MessageStatus) Enum() *MessageStatus {
	p := new(MessageStatus)
	*p = x
	return p
}

func (x MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_messaging_proto_enumTypes[0].Descriptor()
}

func (MessageStatus) Type() protoreflect.EnumType {
	return &file_messaging_proto_enumTypes[0]
}

func (x MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageStatus.Descriptor instead.
func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_messaging_proto_rawDescGZIP(), []int{0}
}

type MessageAttachmentType int32

const (
	MessageAttachmentType_MESSAGE_ATTACHMENT_TYPE_UNSPECIFIED MessageAttachmentType = 0
	MessageAttachmentType_MESSAGE_ATTACHMENT_TYPE_IMAGE       MessageAttachmentType = 1
	MessageAttachmentType_MESSAGE_ATTACHMENT_TYPE_VIDEO       MessageAttachmentType = 2
	MessageAttachmentType_MESSAGE_ATTACHMENT_TYPE_AUDIO       MessageAttachmentType = 3
	MessageAttachmentType_MESSAGE_ATTACHMENT_TYPE_FILE        MessageAttachmentType = 4
	MessageAttachmentType_MESSAGE_ATTACHMENT_TYPE_LINK        MessageAttachmentType = 5
	MessageAttachmentType_MESSAGE_ATTACHMENT_TYPE_GIF         MessageAttachmentType = 6
	MessageAttachmentType_MESSAGE_ATTACHMENT_TYPE_STICKER     MessageAttachmentType = 7
	MessageAttachmentType_MESSAGE_ATTACHMENT_TYPE_LOCATION    MessageAttachmentType = 8
)

// Enum value maps for MessageAttachmentType.
var (
	MessageAttachmentType_name = map[int32]string{
		0: "MESSAGE_ATTACHMENT_TYPE_UNSPECIFIED",
		1: "MESSAGE_ATTACHMENT_TYPE_IMAGE",
		2: "MESSAGE_ATTACHMENT_TYPE_VIDEO",
		3: "MESSAGE_ATTACHMENT_TYPE_AUDIO",
		4: "MESSAGE_ATTACHMENT_TYPE_FILE",
		5: "MESSAGE_ATTACHMENT_TYPE_LINK",
		6: "MESSAGE_ATTACHMENT_TYPE_GIF",
		7: "MESSAGE_ATTACHMENT_TYPE_STICKER",
		8: "MESSAGE_ATTACHMENT_TYPE_LOCATION",
	}
	MessageAttachmentType_value = map[string]int32{
		"MESSAGE_ATTACHMENT_TYPE_UNSPECIFIED": 0,
		"MESSAGE_ATTACHMENT_TYPE_IMAGE":       1,
		"MESSAGE_ATTACHMENT_TYPE_VIDEO":       2,
		"MESSAGE_ATTACHMENT_TYPE_AUDIO":       3,
		"MESSAGE_ATTACHMENT_TYPE_FILE":        4,
		"MESSAGE_ATTACHMENT_TYPE_LINK":        5,
		"MESSAGE_ATTACHMENT_TYPE_GIF":         6,
		"MESSAGE_ATTACHMENT_TYPE_STICKER":     7,
		"MESSAGE_ATTACHMENT_TYPE_LOCATION":    8,
	}
)

func (x MessageAttachmentType) Enum() *MessageAttachmentType {
	p := new(MessageAttachmentType)
	*p = x
	return p
}

func (x MessageAttachmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageAttachmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_messaging_proto_enumTypes[1].Descriptor()
}

func (MessageAttachmentType) Type() protoreflect.EnumType {
	return &file_messaging_proto_enumTypes[1]
}

func (x MessageAttachmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageAttachmentType.Descriptor instead.
func (MessageAttachmentType) EnumDescriptor() ([]byte, []int) {
	return file_messaging_proto_rawDescGZIP(), []int{1}
}

type MessageChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sender         string                 `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient      string                 `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Body           string                 `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	Status         MessageStatus          `protobuf:"varint,6,opt,name=status,proto3,enum=qreeket.MessageStatus" json:"status,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	SentAt         *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=sentAt,proto3" json:"sentAt,omitempty"`
	ReceivedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=receivedAt,proto3" json:"receivedAt,omitempty"`
	ReadAt         *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=readAt,proto3" json:"readAt,omitempty"`
	DeletedAt      *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	ReadBy         []string               `protobuf:"bytes,13,rep,name=readBy,proto3" json:"readBy,omitempty"`
	Attachment     *string                `protobuf:"bytes,14,opt,name=attachment,proto3,oneof" json:"attachment,omitempty"`
	AttachmentType MessageAttachmentType  `protobuf:"varint,15,opt,name=attachmentType,proto3,enum=qreeket.MessageAttachmentType" json:"attachmentType,omitempty"`
	Reactions      []string               `protobuf:"bytes,16,rep,name=reactions,proto3" json:"reactions,omitempty"`
	Mentions       []string               `protobuf:"bytes,17,rep,name=mentions,proto3" json:"mentions,omitempty"`
}

func (x *MessageChat) Reset() {
	*x = MessageChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageChat) ProtoMessage() {}

func (x *MessageChat) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageChat.ProtoReflect.Descriptor instead.
func (*MessageChat) Descriptor() ([]byte, []int) {
	return file_messaging_proto_rawDescGZIP(), []int{0}
}

func (x *MessageChat) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageChat) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MessageChat) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *MessageChat) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MessageChat) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_MESSAGE_STATUS_UNSPECIFIED
}

func (x *MessageChat) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MessageChat) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *MessageChat) GetSentAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SentAt
	}
	return nil
}

func (x *MessageChat) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

func (x *MessageChat) GetReadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReadAt
	}
	return nil
}

func (x *MessageChat) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *MessageChat) GetReadBy() []string {
	if x != nil {
		return x.ReadBy
	}
	return nil
}

func (x *MessageChat) GetAttachment() string {
	if x != nil && x.Attachment != nil {
		return *x.Attachment
	}
	return ""
}

func (x *MessageChat) GetAttachmentType() MessageAttachmentType {
	if x != nil {
		return x.AttachmentType
	}
	return MessageAttachmentType_MESSAGE_ATTACHMENT_TYPE_UNSPECIFIED
}

func (x *MessageChat) GetReactions() []string {
	if x != nil {
		return x.Reactions
	}
	return nil
}

func (x *MessageChat) GetMentions() []string {
	if x != nil {
		return x.Mentions
	}
	return nil
}

type MessageThread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sender     string                 `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient  string                 `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Body       string                 `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	Status     MessageStatus          `protobuf:"varint,6,opt,name=status,proto3,enum=qreeket.MessageStatus" json:"status,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	SentAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=sentAt,proto3" json:"sentAt,omitempty"`
	ReceivedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=receivedAt,proto3" json:"receivedAt,omitempty"`
	ReadAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=readAt,proto3" json:"readAt,omitempty"`
	DeletedAt  *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	Subject    string                 `protobuf:"bytes,13,opt,name=subject,proto3" json:"subject,omitempty"`
	ReadBy     []string               `protobuf:"bytes,14,rep,name=readBy,proto3" json:"readBy,omitempty"`
	Reactions  []string               `protobuf:"bytes,15,rep,name=reactions,proto3" json:"reactions,omitempty"`
	Mentions   []string               `protobuf:"bytes,16,rep,name=mentions,proto3" json:"mentions,omitempty"`
	Messages   []*MessageChat         `protobuf:"bytes,17,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *MessageThread) Reset() {
	*x = MessageThread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageThread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageThread) ProtoMessage() {}

func (x *MessageThread) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageThread.ProtoReflect.Descriptor instead.
func (*MessageThread) Descriptor() ([]byte, []int) {
	return file_messaging_proto_rawDescGZIP(), []int{1}
}

func (x *MessageThread) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageThread) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MessageThread) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *MessageThread) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MessageThread) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_MESSAGE_STATUS_UNSPECIFIED
}

func (x *MessageThread) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MessageThread) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *MessageThread) GetSentAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SentAt
	}
	return nil
}

func (x *MessageThread) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

func (x *MessageThread) GetReadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReadAt
	}
	return nil
}

func (x *MessageThread) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *MessageThread) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *MessageThread) GetReadBy() []string {
	if x != nil {
		return x.ReadBy
	}
	return nil
}

func (x *MessageThread) GetReactions() []string {
	if x != nil {
		return x.Reactions
	}
	return nil
}

func (x *MessageThread) GetMentions() []string {
	if x != nil {
		return x.Mentions
	}
	return nil
}

func (x *MessageThread) GetMessages() []*MessageChat {
	if x != nil {
		return x.Messages
	}
	return nil
}

type MessageListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Item:
	//
	//	*MessageListItem_Message
	//	*MessageListItem_Thread
	Item isMessageListItem_Item `protobuf_oneof:"item"`
}

func (x *MessageListItem) Reset() {
	*x = MessageListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageListItem) ProtoMessage() {}

func (x *MessageListItem) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageListItem.ProtoReflect.Descriptor instead.
func (*MessageListItem) Descriptor() ([]byte, []int) {
	return file_messaging_proto_rawDescGZIP(), []int{2}
}

func (m *MessageListItem) GetItem() isMessageListItem_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *MessageListItem) GetMessage() *MessageChat {
	if x, ok := x.GetItem().(*MessageListItem_Message); ok {
		return x.Message
	}
	return nil
}

func (x *MessageListItem) GetThread() *MessageThread {
	if x, ok := x.GetItem().(*MessageListItem_Thread); ok {
		return x.Thread
	}
	return nil
}

type isMessageListItem_Item interface {
	isMessageListItem_Item()
}

type MessageListItem_Message struct {
	Message *MessageChat `protobuf:"bytes,1,opt,name=message,proto3,oneof"`
}

type MessageListItem_Thread struct {
	Thread *MessageThread `protobuf:"bytes,2,opt,name=thread,proto3,oneof"`
}

func (*MessageListItem_Message) isMessageListItem_Item() {}

func (*MessageListItem_Thread) isMessageListItem_Item() {}

type MessageList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*MessageListItem `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *MessageList) Reset() {
	*x = MessageList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageList) ProtoMessage() {}

func (x *MessageList) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageList.ProtoReflect.Descriptor instead.
func (*MessageList) Descriptor() ([]byte, []int) {
	return file_messaging_proto_rawDescGZIP(), []int{3}
}

func (x *MessageList) GetMessages() []*MessageListItem {
	if x != nil {
		return x.Messages
	}
	return nil
}

type GetMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// Types that are assignable to Recipient:
	//
	//	*GetMessagesRequest_Dm
	//	*GetMessagesRequest_Channel
	Recipient isGetMessagesRequest_Recipient `protobuf_oneof:"recipient"`
}

func (x *GetMessagesRequest) Reset() {
	*x = GetMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesRequest) ProtoMessage() {}

func (x *GetMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesRequest) Descriptor() ([]byte, []int) {
	return file_messaging_proto_rawDescGZIP(), []int{4}
}

func (x *GetMessagesRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (m *GetMessagesRequest) GetRecipient() isGetMessagesRequest_Recipient {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (x *GetMessagesRequest) GetDm() string {
	if x, ok := x.GetRecipient().(*GetMessagesRequest_Dm); ok {
		return x.Dm
	}
	return ""
}

func (x *GetMessagesRequest) GetChannel() string {
	if x, ok := x.GetRecipient().(*GetMessagesRequest_Channel); ok {
		return x.Channel
	}
	return ""
}

type isGetMessagesRequest_Recipient interface {
	isGetMessagesRequest_Recipient()
}

type GetMessagesRequest_Dm struct {
	Dm string `protobuf:"bytes,3,opt,name=dm,proto3,oneof"`
}

type GetMessagesRequest_Channel struct {
	Channel string `protobuf:"bytes,4,opt,name=channel,proto3,oneof"`
}

func (*GetMessagesRequest_Dm) isGetMessagesRequest_Recipient() {}

func (*GetMessagesRequest_Channel) isGetMessagesRequest_Recipient() {}

type DirectMessenger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar    string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Online    bool                   `protobuf:"varint,4,opt,name=online,proto3" json:"online,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	LastSeen  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=lastSeen,proto3" json:"lastSeen,omitempty"`
	Muted     bool                   `protobuf:"varint,8,opt,name=muted,proto3" json:"muted,omitempty"`
	Blocked   bool                   `protobuf:"varint,9,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Archived  bool                   `protobuf:"varint,10,opt,name=archived,proto3" json:"archived,omitempty"`
	Bio       *string                `protobuf:"bytes,11,opt,name=bio,proto3,oneof" json:"bio,omitempty"`
}

func (x *DirectMessenger) Reset() {
	*x = DirectMessenger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectMessenger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectMessenger) ProtoMessage() {}

func (x *DirectMessenger) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectMessenger.ProtoReflect.Descriptor instead.
func (*DirectMessenger) Descriptor() ([]byte, []int) {
	return file_messaging_proto_rawDescGZIP(), []int{5}
}

func (x *DirectMessenger) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DirectMessenger) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DirectMessenger) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *DirectMessenger) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *DirectMessenger) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DirectMessenger) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DirectMessenger) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *DirectMessenger) GetMuted() bool {
	if x != nil {
		return x.Muted
	}
	return false
}

func (x *DirectMessenger) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

func (x *DirectMessenger) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *DirectMessenger) GetBio() string {
	if x != nil && x.Bio != nil {
		return *x.Bio
	}
	return ""
}

type DirectMessengerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messengers []*DirectMessenger `protobuf:"bytes,1,rep,name=messengers,proto3" json:"messengers,omitempty"`
}

func (x *DirectMessengerList) Reset() {
	*x = DirectMessengerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectMessengerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectMessengerList) ProtoMessage() {}

func (x *DirectMessengerList) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectMessengerList.ProtoReflect.Descriptor instead.
func (*DirectMessengerList) Descriptor() ([]byte, []int) {
	return file_messaging_proto_rawDescGZIP(), []int{6}
}

func (x *DirectMessengerList) GetMessengers() []*DirectMessenger {
	if x != nil {
		return x.Messengers
	}
	return nil
}

var File_messaging_proto protoreflect.FileDescriptor

var file_messaging_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x07, 0x71, 0x72, 0x65, 0x65, 0x6b, 0x65, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x05, 0x0a, 0x0b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x71, 0x72, 0x65, 0x65, 0x6b, 0x65, 0x74, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x74, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x3a, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x42,
	0x79, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x42, 0x79, 0x12,
	0x23, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x71,
	0x72, 0x65, 0x65, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x89, 0x05, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x71, 0x72, 0x65, 0x65, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x41, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x64, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x30, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x71, 0x72, 0x65, 0x65, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x7d, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x71, 0x72, 0x65, 0x65, 0x6b, 0x65, 0x74, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x74, 0x48, 0x00, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x71, 0x72, 0x65, 0x65, 0x6b, 0x65, 0x74,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x48, 0x00,
	0x52, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x22, 0x43, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x71, 0x72, 0x65, 0x65, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x02, 0x64, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x02, 0x64, 0x6d, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xfc,
	0x02, 0x0a, 0x0f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x15,
	0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x62,
	0x69, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x62, 0x69, 0x6f, 0x22, 0x4f, 0x0a,
	0x13, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x72, 0x65, 0x65, 0x6b,
	0x65, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x2a, 0xb4,
	0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x4e,
	0x54, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x17, 0x0a, 0x13, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x05, 0x2a, 0xd9, 0x02, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x27, 0x0a, 0x23, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43,
	0x48, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x02, 0x12, 0x21,
	0x0a, 0x1d, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10,
	0x03, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x54, 0x54,
	0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x4c,
	0x45, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x41,
	0x54, 0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c,
	0x49, 0x4e, 0x4b, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x47, 0x49, 0x46, 0x10, 0x06, 0x12, 0x23, 0x0a, 0x1f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x53, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x52, 0x10, 0x07, 0x12, 0x24, 0x0a, 0x20, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x08, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x71, 0x63, 0x6f, 0x64, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x6c, 0x6c, 0x63, 0x2f, 0x71, 0x72, 0x65,
	0x65, 0x6b, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messaging_proto_rawDescOnce sync.Once
	file_messaging_proto_rawDescData = file_messaging_proto_rawDesc
)

func file_messaging_proto_rawDescGZIP() []byte {
	file_messaging_proto_rawDescOnce.Do(func() {
		file_messaging_proto_rawDescData = protoimpl.X.CompressGZIP(file_messaging_proto_rawDescData)
	})
	return file_messaging_proto_rawDescData
}

var file_messaging_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_messaging_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_messaging_proto_goTypes = []interface{}{
	(MessageStatus)(0),            // 0: qreeket.MessageStatus
	(MessageAttachmentType)(0),    // 1: qreeket.MessageAttachmentType
	(*MessageChat)(nil),           // 2: qreeket.MessageChat
	(*MessageThread)(nil),         // 3: qreeket.MessageThread
	(*MessageListItem)(nil),       // 4: qreeket.MessageListItem
	(*MessageList)(nil),           // 5: qreeket.MessageList
	(*GetMessagesRequest)(nil),    // 6: qreeket.GetMessagesRequest
	(*DirectMessenger)(nil),       // 7: qreeket.DirectMessenger
	(*DirectMessengerList)(nil),   // 8: qreeket.DirectMessengerList
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_messaging_proto_depIdxs = []int32{
	0,  // 0: qreeket.MessageChat.status:type_name -> qreeket.MessageStatus
	9,  // 1: qreeket.MessageChat.createdAt:type_name -> google.protobuf.Timestamp
	9,  // 2: qreeket.MessageChat.updatedAt:type_name -> google.protobuf.Timestamp
	9,  // 3: qreeket.MessageChat.sentAt:type_name -> google.protobuf.Timestamp
	9,  // 4: qreeket.MessageChat.receivedAt:type_name -> google.protobuf.Timestamp
	9,  // 5: qreeket.MessageChat.readAt:type_name -> google.protobuf.Timestamp
	9,  // 6: qreeket.MessageChat.deletedAt:type_name -> google.protobuf.Timestamp
	1,  // 7: qreeket.MessageChat.attachmentType:type_name -> qreeket.MessageAttachmentType
	0,  // 8: qreeket.MessageThread.status:type_name -> qreeket.MessageStatus
	9,  // 9: qreeket.MessageThread.createdAt:type_name -> google.protobuf.Timestamp
	9,  // 10: qreeket.MessageThread.updatedAt:type_name -> google.protobuf.Timestamp
	9,  // 11: qreeket.MessageThread.sentAt:type_name -> google.protobuf.Timestamp
	9,  // 12: qreeket.MessageThread.receivedAt:type_name -> google.protobuf.Timestamp
	9,  // 13: qreeket.MessageThread.readAt:type_name -> google.protobuf.Timestamp
	9,  // 14: qreeket.MessageThread.deletedAt:type_name -> google.protobuf.Timestamp
	2,  // 15: qreeket.MessageThread.messages:type_name -> qreeket.MessageChat
	2,  // 16: qreeket.MessageListItem.message:type_name -> qreeket.MessageChat
	3,  // 17: qreeket.MessageListItem.thread:type_name -> qreeket.MessageThread
	4,  // 18: qreeket.MessageList.messages:type_name -> qreeket.MessageListItem
	9,  // 19: qreeket.DirectMessenger.createdAt:type_name -> google.protobuf.Timestamp
	9,  // 20: qreeket.DirectMessenger.updatedAt:type_name -> google.protobuf.Timestamp
	9,  // 21: qreeket.DirectMessenger.lastSeen:type_name -> google.protobuf.Timestamp
	7,  // 22: qreeket.DirectMessengerList.messengers:type_name -> qreeket.DirectMessenger
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_messaging_proto_init() }
func file_messaging_proto_init() {
	if File_messaging_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messaging_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageThread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectMessenger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectMessengerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messaging_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_messaging_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*MessageListItem_Message)(nil),
		(*MessageListItem_Thread)(nil),
	}
	file_messaging_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*GetMessagesRequest_Dm)(nil),
		(*GetMessagesRequest_Channel)(nil),
	}
	file_messaging_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messaging_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messaging_proto_goTypes,
		DependencyIndexes: file_messaging_proto_depIdxs,
		EnumInfos:         file_messaging_proto_enumTypes,
		MessageInfos:      file_messaging_proto_msgTypes,
	}.Build()
	File_messaging_proto = out.File
	file_messaging_proto_rawDesc = nil
	file_messaging_proto_goTypes = nil
	file_messaging_proto_depIdxs = nil
}
